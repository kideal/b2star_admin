<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mall.dao.ProductAttributeMapper">
  <resultMap id="BaseResultMap" type="com.mall.entity.ProductAttribute">
    <id column="product_attribute_id" jdbcType="INTEGER" property="productAttributeId" />
    <result column="product_id" jdbcType="INTEGER" property="productId" />
    <result column="attribute_code" jdbcType="VARCHAR" property="attributeCode" />
    <result column="attribute_name" jdbcType="VARCHAR" property="attributeName" />
    <result column="type_code" jdbcType="VARCHAR" property="typeCode" />
    <result column="sort" jdbcType="INTEGER" property="sort" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.mall.entity.ProductAttribute">
    <result column="attribute_value" jdbcType="LONGVARCHAR" property="attributeValue" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    product_attribute_id, product_id, attribute_code, attribute_name, type_code, sort
  </sql>
  <sql id="Blob_Column_List">
    attribute_value
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.mall.entity.ProductAttributeExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from product_attribute
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.mall.entity.ProductAttributeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from product_attribute
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from product_attribute
    where product_attribute_id = #{productAttributeId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from product_attribute
    where product_attribute_id = #{productAttributeId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.mall.entity.ProductAttributeExample">
    delete from product_attribute
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.mall.entity.ProductAttribute">
    insert into product_attribute (product_attribute_id, product_id, attribute_code, 
      attribute_name, type_code, sort, 
      attribute_value)
    values (#{productAttributeId,jdbcType=INTEGER}, #{productId,jdbcType=INTEGER}, #{attributeCode,jdbcType=VARCHAR}, 
      #{attributeName,jdbcType=VARCHAR}, #{typeCode,jdbcType=VARCHAR}, #{sort,jdbcType=INTEGER}, 
      #{attributeValue,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.mall.entity.ProductAttribute">
    insert into product_attribute
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="productAttributeId != null">
        product_attribute_id,
      </if>
      <if test="productId != null">
        product_id,
      </if>
      <if test="attributeCode != null">
        attribute_code,
      </if>
      <if test="attributeName != null">
        attribute_name,
      </if>
      <if test="typeCode != null">
        type_code,
      </if>
      <if test="sort != null">
        sort,
      </if>
      <if test="attributeValue != null">
        attribute_value,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="productAttributeId != null">
        #{productAttributeId,jdbcType=INTEGER},
      </if>
      <if test="productId != null">
        #{productId,jdbcType=INTEGER},
      </if>
      <if test="attributeCode != null">
        #{attributeCode,jdbcType=VARCHAR},
      </if>
      <if test="attributeName != null">
        #{attributeName,jdbcType=VARCHAR},
      </if>
      <if test="typeCode != null">
        #{typeCode,jdbcType=VARCHAR},
      </if>
      <if test="sort != null">
        #{sort,jdbcType=INTEGER},
      </if>
      <if test="attributeValue != null">
        #{attributeValue,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.mall.entity.ProductAttributeExample" resultType="java.lang.Long">
    select count(*) from product_attribute
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update product_attribute
    <set>
      <if test="record.productAttributeId != null">
        product_attribute_id = #{record.productAttributeId,jdbcType=INTEGER},
      </if>
      <if test="record.productId != null">
        product_id = #{record.productId,jdbcType=INTEGER},
      </if>
      <if test="record.attributeCode != null">
        attribute_code = #{record.attributeCode,jdbcType=VARCHAR},
      </if>
      <if test="record.attributeName != null">
        attribute_name = #{record.attributeName,jdbcType=VARCHAR},
      </if>
      <if test="record.typeCode != null">
        type_code = #{record.typeCode,jdbcType=VARCHAR},
      </if>
      <if test="record.sort != null">
        sort = #{record.sort,jdbcType=INTEGER},
      </if>
      <if test="record.attributeValue != null">
        attribute_value = #{record.attributeValue,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update product_attribute
    set product_attribute_id = #{record.productAttributeId,jdbcType=INTEGER},
      product_id = #{record.productId,jdbcType=INTEGER},
      attribute_code = #{record.attributeCode,jdbcType=VARCHAR},
      attribute_name = #{record.attributeName,jdbcType=VARCHAR},
      type_code = #{record.typeCode,jdbcType=VARCHAR},
      sort = #{record.sort,jdbcType=INTEGER},
      attribute_value = #{record.attributeValue,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update product_attribute
    set product_attribute_id = #{record.productAttributeId,jdbcType=INTEGER},
      product_id = #{record.productId,jdbcType=INTEGER},
      attribute_code = #{record.attributeCode,jdbcType=VARCHAR},
      attribute_name = #{record.attributeName,jdbcType=VARCHAR},
      type_code = #{record.typeCode,jdbcType=VARCHAR},
      sort = #{record.sort,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.mall.entity.ProductAttribute">
    update product_attribute
    <set>
      <if test="productId != null">
        product_id = #{productId,jdbcType=INTEGER},
      </if>
      <if test="attributeCode != null">
        attribute_code = #{attributeCode,jdbcType=VARCHAR},
      </if>
      <if test="attributeName != null">
        attribute_name = #{attributeName,jdbcType=VARCHAR},
      </if>
      <if test="typeCode != null">
        type_code = #{typeCode,jdbcType=VARCHAR},
      </if>
      <if test="sort != null">
        sort = #{sort,jdbcType=INTEGER},
      </if>
      <if test="attributeValue != null">
        attribute_value = #{attributeValue,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where product_attribute_id = #{productAttributeId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.mall.entity.ProductAttribute">
    update product_attribute
    set product_id = #{productId,jdbcType=INTEGER},
      attribute_code = #{attributeCode,jdbcType=VARCHAR},
      attribute_name = #{attributeName,jdbcType=VARCHAR},
      type_code = #{typeCode,jdbcType=VARCHAR},
      sort = #{sort,jdbcType=INTEGER},
      attribute_value = #{attributeValue,jdbcType=LONGVARCHAR}
    where product_attribute_id = #{productAttributeId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mall.entity.ProductAttribute">
    update product_attribute
    set product_id = #{productId,jdbcType=INTEGER},
      attribute_code = #{attributeCode,jdbcType=VARCHAR},
      attribute_name = #{attributeName,jdbcType=VARCHAR},
      type_code = #{typeCode,jdbcType=VARCHAR},
      sort = #{sort,jdbcType=INTEGER}
    where product_attribute_id = #{productAttributeId,jdbcType=INTEGER}
  </update>
</mapper>