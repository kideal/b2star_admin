<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mall.dao.GoodsPromotionMapper">
  <resultMap id="BaseResultMap" type="com.mall.entity.GoodsPromotion">
    <id column="promotion_id" jdbcType="INTEGER" property="promotionId" />
    <result column="goods_no" jdbcType="VARCHAR" property="goodsNo" />
    <result column="goods_id" jdbcType="INTEGER" property="goodsId" />
    <result column="price" jdbcType="DECIMAL" property="price" />
    <result column="prom_price" jdbcType="DECIMAL" property="promPrice" />
    <result column="prom_from" jdbcType="TIMESTAMP" property="promFrom" />
    <result column="prom_to" jdbcType="TIMESTAMP" property="promTo" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    promotion_id, goods_no, goods_id, price, prom_price, prom_from, prom_to, create_time, 
    update_time
  </sql>
  <select id="selectByExample" parameterType="com.mall.entity.GoodsPromotionExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from goods_promotion
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from goods_promotion
    where promotion_id = #{promotionId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from goods_promotion
    where promotion_id = #{promotionId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.mall.entity.GoodsPromotionExample">
    delete from goods_promotion
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.mall.entity.GoodsPromotion">
    insert into goods_promotion (promotion_id, goods_no, goods_id, 
      price, prom_price, prom_from, 
      prom_to, create_time, update_time
      )
    values (#{promotionId,jdbcType=INTEGER}, #{goodsNo,jdbcType=VARCHAR}, #{goodsId,jdbcType=INTEGER}, 
      #{price,jdbcType=DECIMAL}, #{promPrice,jdbcType=DECIMAL}, #{promFrom,jdbcType=TIMESTAMP}, 
      #{promTo,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.mall.entity.GoodsPromotion">
    insert into goods_promotion
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="promotionId != null">
        promotion_id,
      </if>
      <if test="goodsNo != null">
        goods_no,
      </if>
      <if test="goodsId != null">
        goods_id,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="promPrice != null">
        prom_price,
      </if>
      <if test="promFrom != null">
        prom_from,
      </if>
      <if test="promTo != null">
        prom_to,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="promotionId != null">
        #{promotionId,jdbcType=INTEGER},
      </if>
      <if test="goodsNo != null">
        #{goodsNo,jdbcType=VARCHAR},
      </if>
      <if test="goodsId != null">
        #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="promPrice != null">
        #{promPrice,jdbcType=DECIMAL},
      </if>
      <if test="promFrom != null">
        #{promFrom,jdbcType=TIMESTAMP},
      </if>
      <if test="promTo != null">
        #{promTo,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.mall.entity.GoodsPromotionExample" resultType="java.lang.Long">
    select count(*) from goods_promotion
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update goods_promotion
    <set>
      <if test="record.promotionId != null">
        promotion_id = #{record.promotionId,jdbcType=INTEGER},
      </if>
      <if test="record.goodsNo != null">
        goods_no = #{record.goodsNo,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsId != null">
        goods_id = #{record.goodsId,jdbcType=INTEGER},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=DECIMAL},
      </if>
      <if test="record.promPrice != null">
        prom_price = #{record.promPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.promFrom != null">
        prom_from = #{record.promFrom,jdbcType=TIMESTAMP},
      </if>
      <if test="record.promTo != null">
        prom_to = #{record.promTo,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update goods_promotion
    set promotion_id = #{record.promotionId,jdbcType=INTEGER},
      goods_no = #{record.goodsNo,jdbcType=VARCHAR},
      goods_id = #{record.goodsId,jdbcType=INTEGER},
      price = #{record.price,jdbcType=DECIMAL},
      prom_price = #{record.promPrice,jdbcType=DECIMAL},
      prom_from = #{record.promFrom,jdbcType=TIMESTAMP},
      prom_to = #{record.promTo,jdbcType=TIMESTAMP},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.mall.entity.GoodsPromotion">
    update goods_promotion
    <set>
      <if test="goodsNo != null">
        goods_no = #{goodsNo,jdbcType=VARCHAR},
      </if>
      <if test="goodsId != null">
        goods_id = #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="promPrice != null">
        prom_price = #{promPrice,jdbcType=DECIMAL},
      </if>
      <if test="promFrom != null">
        prom_from = #{promFrom,jdbcType=TIMESTAMP},
      </if>
      <if test="promTo != null">
        prom_to = #{promTo,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where promotion_id = #{promotionId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mall.entity.GoodsPromotion">
    update goods_promotion
    set goods_no = #{goodsNo,jdbcType=VARCHAR},
      goods_id = #{goodsId,jdbcType=INTEGER},
      price = #{price,jdbcType=DECIMAL},
      prom_price = #{promPrice,jdbcType=DECIMAL},
      prom_from = #{promFrom,jdbcType=TIMESTAMP},
      prom_to = #{promTo,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where promotion_id = #{promotionId,jdbcType=INTEGER}
  </update>
</mapper>